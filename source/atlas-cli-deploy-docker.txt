.. _atlas-cli-deploy-docker:

===========================================
Create a Local Atlas Deployment with Docker
===========================================

.. default-domain:: mongodb

.. facet::
   :name: genre
   :values: tutorial

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

This tutorial shows you how to use the :ref:`atlas-deployments` command 
to create a local |service| deployment with Docker. In this tutorial, 
we will deploy a single-node replica set with Docker.

.. include:: /includes/fact-atlas-deployments-preview.rst

.. _atlas-cli-deploy-docker-setup:

Create a Local Atlas Deployment with Docker
-------------------------------------------

Use the ``atlas deployments`` command to create a local |service|
deployment with Docker.
      
.. procedure::
   :style: normal

   .. step:: Install and start Docker.

      To learn more, see the `Docker documentation <https://docs.docker.com/desktop/install/mac-install/>`__.

   .. step:: Pull down the latest ``mongodb/atlas`` Docker image.

      **Example:**

      .. code-block:: sh

         docker pull mongodb/atlas:latest

   .. step:: Run the Docker image in bash mode.

      To learn more, see :ref:`atlas-cli-docker`.

      **Example:**

      .. code-block:: sh

         docker run -p 27777:27017 --privileged -it mongodb/atlas bash

   .. step:: Create a local |service| deployment.

      The following command creates a local |service| deployment with 
      |fts| capabilities enabled. It also returns a connection string.

      **Example:**

      .. code-block::

         atlas deployments setup --bindIpAll --username root --password root --type local --force

      To learn more about the available options, see 
      :ref:`atlas-deployments-setup`.

   .. step:: Connect to the local |service| deployment.

      To connect to the local |service| deployment from the host (not 
      container), copy and paste the following command, and replace 
      the ``{connection_string}`` variable with your connection string.

      .. note::

         The following example uses {+mongosh+}, but you can use the 
         connection method that you prefer.

      .. code-block:: sh

         mongosh {connection_string}

      **Example:**

      .. code-block:: sh

         mongosh mongodb://root:root@localhost:27017/?directConnection=true


Create a Local Atlas Deployment with Docker Compose
---------------------------------------------------

Use the ``atlas deployments`` command to create a local |service|
deployment with `Docker Compose <https://docs.docker.com/compose/>`__.
      
.. procedure::
   :style: normal

   .. step:: Install Docker Compose.

      **Example:**

      .. code-block:: sh

         brew install docker-compose

   .. step:: Create a ``docker-compose.yaml`` file.

      Create the ``docker-compose.yaml`` file in the same directory 
      that you run Docker Compose from.

      **Example:**

      .. code-block:: sh
         
         services:
           mongo:
             image: mongodb/atlas
             privileged: true
             command: |
               /bin/bash -c "atlas deployments setup --type local --port 27778 --bindIpAll --username root --password root --force && tail -f /dev/null"
             volumes:
               - /var/run/docker.sock:/var/run/docker.sock
             ports:
               - 27778:27778

      To learn more about the available options, see 
      :ref:`atlas-deployments-setup`.

   .. step:: Run Docker Compose.

      The following command creates a local |service| deployment with 
      |fts| capabilities enabled. It also returns a connection string.

      **Example:**

      .. code-block:: sh

         docker-compose up
    
   .. step:: Connect to the local |service| deployment.

      To connect to the local |service| deployment from the host (not 
      container), copy and paste the following command, and replace 
      the ``{connection_string}`` variable with your connection string.

      .. note::

         The following example uses {+mongosh+}, but you can use the 
         connection method that you prefer.

      .. code-block:: sh

         mongosh {connection_string}

      **Example:**

      .. code-block:: sh

         mongosh mongodb://root:root@localhost:27778/?directConnection=true

Supported Actions
-----------------

To learn all of the actions that ``atlas deployments`` supports, see
:ref:`atlas-deployments`.
