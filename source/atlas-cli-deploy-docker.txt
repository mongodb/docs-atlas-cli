.. _atlas-cli-deploy-docker:

===========================================
Create a Local Atlas Deployment with Docker
===========================================

.. default-domain:: mongodb

.. facet::
   :name: genre
   :values: tutorial

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

This tutorial shows you how to use the :ref:`atlas-deployments` command 
to create a local |service| deployment with Docker. In this tutorial, 
we will deploy a single-node replica set with Docker.

.. include:: /includes/fact-atlas-deployments-preview.rst

.. _atlas-cli-deploy-docker-setup:

Create a Local Atlas Deployment with Docker
-------------------------------------------

Use the ``atlas deployments`` command to create a local |service|
deployment with Docker.
      
.. procedure::
   :style: normal

   .. step:: Install and start Docker.

      To learn more, see the `Docker documentation <https://docs.docker.com/desktop/install/mac-install/>`__.

   .. step:: Pull down the latest ``mongodb/atlas`` Docker image.

      **Example:**

      .. code-block:: sh

         docker pull mongodb/atlas:latest

   .. step:: Run the Docker image in bash mode.

      To learn more, see :ref:`atlas-cli-docker`.

      **Example:**

      .. code-block:: sh

         docker run -p 27777:27017 --privileged -it mongodb/atlas bash

   .. step:: Create a local |service| deployment.

      The following command creates a local |service| deployment with 
      |fts| capabilities enabled. It also returns a connection string.

      **Example:**

      .. code-block::

         atlas deployments setup --bindIpAll --username root --password root --type local --force

      To learn more about the available options, see 
      :ref:`atlas-deployments-setup`.

   .. step:: Connect to the local |service| deployment.

      To connect to the local |service| deployment from the host (not 
      container), copy and paste the following command, and replace 
      the ``{connection_string}`` variable with your connection string.

      .. note::

         The following example uses {+mongosh+}, but you can use the 
         connection method that you prefer.

      .. code-block:: sh

         mongosh {connection_string}

      **Example:**

      .. code-block:: sh

         mongosh mongodb://root:root@localhost:27017/?directConnection=true


Create a Local Atlas Deployment with Docker Compose
---------------------------------------------------

Use the ``atlas deployments`` command to create a local |service|
deployment with `Docker Compose <https://docs.docker.com/compose/>`__.
      
.. procedure::
   :style: normal

   .. step:: Install and start Docker.

      To learn more, see the `Docker documentation <https://docs.docker.com/desktop/install/mac-install/>`__.

   .. step:: Install Docker Compose.

      **Example:**

      .. code-block:: sh

         brew install docker-compose

      To learn more, see the `Docker Compose install documentation 
      <https://docs.docker.com/compose/install/>`__.

   .. step:: Create a ``docker-compose.yaml`` file.

      a. Create the ``docker-compose.yaml`` file in the same directory 
         that you run Docker Compose from.

         **Example:**

         .. code-block:: sh
            :linenos: 
         
            services:
              mongo:
                image: mongodb/atlas
                privileged: true
                command: |
                  /bin/bash -c "atlas deployments setup --type local --port 27778 --bindIpAll --username root --password {your-password} --force && tail -f /dev/null"
                volumes:
                  - /var/run/docker.sock:/var/run/docker.sock
                ports:
                  - 27778:27778

      #. Replace the ``{your-password}`` variable in the example with your
         password and save the file.

      To learn more about the available options, see 
      :ref:`atlas-deployments-setup`.

   .. step:: Run Docker Compose.

      The following command creates a local |service| deployment with 
      |fts| capabilities enabled. It also returns a connection string.

      **Example:**

      .. code-block:: sh

         docker-compose up
    
   .. step:: Connect to the local |service| deployment.

      To connect to the local |service| deployment from the host (not 
      container), copy and paste the following command, and replace 
      the ``{connection_string}`` variable with your connection string.

      .. note::

         The following example uses {+mongosh+}, but you can use the 
         connection method that you prefer.

      .. code-block:: sh

         mongosh {connection_string}

      **Example:**

      .. code-block:: sh

         mongosh mongodb://root:root@localhost:27778/?directConnection=true

Persist Data Across Runs with Docker Compose
--------------------------------------------

You can persist data across multiple runs with `Docker Compose 
<https://docs.docker.com/compose/>`__. Persisting data helps to ensure 
that data isn't lost between runs. Data remains available across runs 
of Docker Compose.

.. procedure::
   :style: normal

   .. step:: Install and start Docker.

      To learn more, see the `Docker documentation <https://docs.docker.com/desktop/install/mac-install/>`__.

   .. step:: Install Docker Compose.

      **Example:**

      .. code-block:: sh

         brew install docker-compose

      To learn more, see the `Docker Compose install documentation 
      <https://docs.docker.com/compose/install/>`__.

   .. step:: Create a script to start and stop your local deployment.

      a. Create the following ``entrypoint.sh`` script file in the same 
         directory that you run Docker Compose from:

         .. code-block:: sh

            #!/bin/bash
            stop_atlas() {
              echo "Stopping Atlas deployment..."
              atlas deployments stop
            }
            start_atlas() {
              echo "Starting Atlas deployment..."
              atlas deployments start
            }
           trap 'stop_atlas' SIGTERM SIGINT
           deployment_status=$(atlas deployments list | grep 'LOCAL')
           if [[ -z "$deployment_status" ]]; then
             echo "No local deployment found. Setting up..."
             atlas deployments setup dev --bindIpAll --username root --password $LOCALDEV_PASSWORD --type local --port 27017 --force
           else
             if [[ $deployment_status == *"STOPPED"* ]]; then
               start_atlas
             fi
           fi
           while true
           do
             tail -f /dev/null & wait ${!}
           done

      #. Run the following command to make the script executable only 
         by you:

         .. code-block:: sh

            chmod u+x entrypoint.sh

   .. step:: Update your ``docker-compose.yaml`` file.

      a. Update the ``docker-compose.yaml`` file to mount the necessary 
         data directories as volumes.

         **Example:**

         .. code-block:: sh
            :linenos: 
         
            services:
              mongo:
                image: mongodb/atlas
                privileged: true
                volumes:
                  - data-cni:/etc/cni
                  - data-containers:/var/lib/containers
                  - ./entrypoint.sh:/entrypoint.sh
                ports:
                  - 27017:27017
                environment:
                  - LOCALDEV_PASSWORD={your-password}
            volumes:
              data-cni:
              data-containers:

      #. Replace the ``{your-password}`` variable in the example with 
         your password and save the file.

      To learn more about the available options, see 
      :ref:`atlas-deployments-setup`.

   .. step:: Run Docker Compose.

      The following command creates a local |service| deployment with 
      |fts| capabilities enabled. It also returns a connection string.

      **Example:**

      .. code-block:: sh

         docker-compose up

      You can also run Docker Compose in `detached mode <https://docs.docker.com/reference/cli/docker/compose/up/#options>`__.

      **Example:**

      .. code-block:: sh

         docker-compose up -d

   .. step:: Connect to the local |service| deployment.

      To connect to the local |service| deployment from the host (not 
      container), copy and paste the following command, and replace 
      the ``{connection_string}`` variable with your connection string.

      .. note::

         The following example uses {+mongosh+}, but you can use the 
         connection method that you prefer.

      .. code-block:: sh

         mongosh {connection_string}

      **Example:**

      .. code-block:: sh

         mongosh mongodb://root:{your-password}@localhost:27017/?directConnection=true

Supported Actions
-----------------

To learn all of the actions that ``atlas deployments`` supports, see
:ref:`atlas-deployments`.
